name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'DEVELOPMENT.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'DEVELOPMENT.md'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

jobs:
  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run markdownlint-cli
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: '**/*.md'
          config_file: '.github/markdownlint.json'
          ignore_files: 'node_modules/**'

  check-links:
    name: Check Links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Link Checker
        uses: lycheeverse/lychee-action@v1.8.0
        with:
          args: --verbose --no-progress '**/*.md'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  validate-examples:
    name: Validate Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check bash code blocks in markdown
        run: |
          find . -type f -name "*.md" -exec grep -l '```bash' {} \; | while read -r file; do
            echo "Checking bash snippets in $file"
            
            # Extract all bash code blocks from the markdown file
            csplit --silent --prefix=snippet "$file" '/^```bash$/' '{*}' '/^```$/' '{*}'
            rm snippet00 # Remove file content before the first ```bash
            
            # Check syntax of each bash snippet
            for snippet in snippet*; do
              if head -n 1 "$snippet" | grep -q '^```bash$'; then
                # Remove the ```bash and ``` markers
                sed -i '1d;$d' "$snippet"
                
                # Only check if snippet is not empty
                if [ -s "$snippet" ]; then
                  echo "  Checking snippet in $file (${snippet})"
                  bash -n "$snippet" || echo "Syntax error in $file - $snippet"
                fi
              fi
              # Clean up snippet file
              rm "$snippet"
            done
          done