name: Lint Scripts

on:
  push:
    branches: [main, develop]
    paths:
      - '**/*.sh'
      - '**/*.lua'
      - '.github/workflows/lint-scripts.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - '**/*.sh'
      - '**/*.lua'
      - '.github/workflows/lint-scripts.yml'
  workflow_dispatch:

jobs:
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
      
      - name: List shell scripts
        id: find_scripts
        run: |
          if [[ -d "./scripts" && $(find ./scripts -name "*.sh" | wc -l) -gt 0 ]]; then
            echo "SHELL_SCRIPTS_EXIST=true" >> $GITHUB_ENV
            find ./scripts -name "*.sh" -type f
          else
            echo "SHELL_SCRIPTS_EXIST=false" >> $GITHUB_ENV
            echo "No shell scripts found in ./scripts directory"
          fi
      
      - name: Run shellcheck
        if: env.SHELL_SCRIPTS_EXIST == 'true'
        run: |
          # Use -x to follow source directives
          find ./scripts -name "*.sh" -type f -print0 | xargs -0 shellcheck -x

  luacheck:
    name: Lua Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Check for Lua files
        id: check-lua
        run: |
          if [[ $(find . -name "*.lua" | wc -l) -gt 0 ]]; then
            echo "LUA_FILES_EXIST=true" >> $GITHUB_ENV
            echo "Found Lua files:"
            find . -name "*.lua" -type f | head -5
          else
            echo "LUA_FILES_EXIST=false" >> $GITHUB_ENV
            echo "No Lua files found in repository"
          fi
      
      - name: Set up Lua
        if: env.LUA_FILES_EXIST == 'true'
        uses: leafo/gh-actions-lua@v9
        with:
          luaVersion: "5.1"
      
      - name: Set up LuaRocks
        if: env.LUA_FILES_EXIST == 'true'
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Install luacheck
        if: env.LUA_FILES_EXIST == 'true'
        run: luarocks install luacheck
      
      - name: Run luacheck
        if: env.LUA_FILES_EXIST == 'true'
        run: |
          cat > .luacheckrc << 'EOF'
          -- Disable max line length restriction
          max_line_length = false
          
          -- Standard Lua globals, plus Lua 5.1 globals and test framework globals
          std = "lua51"
          
          globals = {
            "vim", "assert", "describe", "it", "before_each", "after_each",
            "print", "io", "table", "string", "math", "os", "require", "ipairs", "pairs"
          }
          
          -- Files to exclude
          exclude_files = {
            "deps/**",
            ".luarocks/**"
          }
          
          -- Disable specific checks
          ignore = {
            -- Unused variables and arguments
            "212", "213",
            -- Whitespace at end of line or file
            "611", "614",
            -- Shadowing
            "421", "431",
            -- Misc
            "581" -- Negation operator
          }
          EOF
          
          luacheck . --config .luacheckrc